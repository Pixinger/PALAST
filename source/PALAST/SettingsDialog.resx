<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAP//4AD///AB///8A////wf//////////8=
</value>
  </data>
</root>